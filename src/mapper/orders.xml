<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 配置Mabatis映射文件 -->
<mapper namespace="com.dao.OrdersDAO">
	<resultMap type="orders" id="ordersMap">
		<id property="ordersid" column="ordersid" />
		<result property="ordercode" column="ordercode" />
		<result property="usersid" column="usersid" />
		<result property="teacherid" column="teacherid" />
		<result property="orderdate" column="orderdate" />
		<result property="sectionx" column="sectionx" />
		<result property="status" column="status" />
		<result property="memo" column="memo" />
		<result property="realname" column="realname" />
		<result property="teachername" column="teachername" />
	</resultMap>
	<!-- 插入语句 DAO通过id调用此配置 -->
	<insert id="insertOrders" parameterType="orders">
		insert into orders(ordersid , ordercode , usersid , teacherid , orderdate , sectionx , status , memo ) values(#{ordersid} , #{ordercode} , #{usersid} , #{teacherid}
		, #{orderdate} , #{sectionx} , #{status} , #{memo} )
	</insert>
	<!-- 更新语句 DAO通过id调用此配置 -->
	<update id="updateOrders" parameterType="orders">
		update orders set ordercode=#{ordercode} , usersid=#{usersid} , teacherid=#{teacherid} , orderdate=#{orderdate} , sectionx=#{sectionx} , status=#{status} ,
		memo=#{memo} where ordersid=#{ordersid}
	</update>
	<!-- 按主键删除 DAO通过id调用此配置 -->
	<delete id="deleteOrders" parameterType="String">
		delete from orders where ordersid = #{ordersid}
	</delete>
	<!-- 查询全部信息 DAO通过id调用此配置 -->
	<select id="getAllOrders" resultMap="ordersMap">
		select a.* , b.realname , c.teachername from orders a , users b , teacher c where a.usersid = b.usersid and a.teacherid = c.teacherid order by ordersid desc
	</select>
	<!-- 按主键查询 DAO通过id调用此配置 -->
	<select id="getOrdersById" parameterType="String" resultMap="ordersMap">
		select a.* , b.realname , c.teachername from orders a , users b , teacher c where a.usersid = b.usersid and a.teacherid = c.teacherid and ordersid=#{ordersid} order
		by ordersid desc
	</select>
	<!-- 按条件精确查询 DAO通过id调用此配置 -->
	<select id="getOrdersByCond" parameterType="orders" resultMap="ordersMap">
		select a.* , b.realname , c.teachername from orders a , users b , teacher c where a.usersid = b.usersid and a.teacherid = c.teacherid
		<if test="ordercode != null and '' != ordercode">
			and a.ordercode = #{ordercode}
		</if>
		<if test="usersid != null and '' != usersid">
			and a.usersid = #{usersid}
		</if>
		<if test="teacherid != null and '' != teacherid">
			and a.teacherid = #{teacherid}
		</if>
		<if test="orderdate != null and '' != orderdate">
			and a.orderdate = #{orderdate}
		</if>
		<if test="sectionx != null and '' != sectionx">
			and a.sectionx = #{sectionx}
		</if>
		<if test="status != null and '' != status">
			and a.status = #{status}
		</if>
		<if test="memo != null and '' != memo">
			and a.memo = #{memo}
		</if>
	</select>
	<!-- 按条件模糊查询 DAO通过id调用此配置 -->
	<select id="getOrdersByLike" parameterType="orders" resultMap="ordersMap">
		select a.* , b.realname , c.teachername from orders a , users b , teacher c where a.usersid = b.usersid and a.teacherid = c.teacherid
		<if test="ordercode != null and '' != ordercode">
			and a.ordercode like CONCAT('%', CONCAT(#{ordercode}, '%'))
		</if>
		<if test="usersid != null and '' != usersid">
			and b.realname like CONCAT('%', CONCAT(#{usersid}, '%'))
		</if>
		<if test="teacherid != null and '' != teacherid">
			and c.teachername like CONCAT('%', CONCAT(#{teacherid}, '%'))
		</if>
		<if test="orderdate != null and '' != orderdate">
			and a.orderdate like CONCAT('%', CONCAT(#{orderdate}, '%'))
		</if>
		<if test="sectionx != null and '' != sectionx">
			and a.sectionx like CONCAT('%', CONCAT(#{sectionx}, '%'))
		</if>
		<if test="status != null and '' != status">
			and a.status like CONCAT('%', CONCAT(#{status}, '%'))
		</if>
		<if test="memo != null and '' != memo">
			and a.memo like CONCAT('%', CONCAT(#{memo}, '%'))
		</if>
	</select>
</mapper>




























<!--  -->
