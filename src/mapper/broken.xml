<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 配置Mabatis映射文件 -->
<mapper namespace="com.dao.BrokenDAO">
	<resultMap type="broken" id="brokenMap">
		<id property="brokenid" column="brokenid" />
		<result property="equipmentid" column="equipmentid" />
		<result property="reason" column="reason" />
		<result property="resultx" column="resultx" />
		<result property="money" column="money" />
		<result property="addtime" column="addtime" />
		<result property="memo" column="memo" />
		<result property="equipname" column="equipname" />
	</resultMap>
	<!-- 插入语句 DAO通过id调用此配置 -->
	<insert id="insertBroken" parameterType="broken">
		insert into broken(brokenid , equipmentid , reason , resultx , money , addtime , memo ) values(#{brokenid} , #{equipmentid} , #{reason} , #{resultx} , #{money} ,
		#{addtime} , #{memo} )
	</insert>
	<!-- 更新语句 DAO通过id调用此配置 -->
	<update id="updateBroken" parameterType="broken">
		update broken set equipmentid=#{equipmentid} , reason=#{reason} , resultx=#{resultx} , money=#{money} , addtime=#{addtime} , memo=#{memo} where brokenid=#{brokenid}
	</update>
	<!-- 按主键删除 DAO通过id调用此配置 -->
	<delete id="deleteBroken" parameterType="String">
		delete from broken where brokenid = #{brokenid}
	</delete>
	<!-- 查询全部信息 DAO通过id调用此配置 -->
	<select id="getAllBroken" resultMap="brokenMap">
		select a.* , b.equipname from broken a , equipment b where a.equipmentid = b.equipmentid order by brokenid desc
	</select>
	<!-- 按主键查询 DAO通过id调用此配置 -->
	<select id="getBrokenById" parameterType="String" resultMap="brokenMap">
		select a.* , b.equipname from broken a , equipment b where a.equipmentid = b.equipmentid and brokenid=#{brokenid} order by brokenid desc
	</select>
	<!-- 按条件精确查询 DAO通过id调用此配置 -->
	<select id="getBrokenByCond" parameterType="broken" resultMap="brokenMap">
		select a.* , b.equipname from broken a , equipment b where a.equipmentid = b.equipmentid
		<if test="equipmentid != null and '' != equipmentid">
			and a.equipmentid = #{equipmentid}
		</if>
		<if test="reason != null and '' != reason">
			and a.reason = #{reason}
		</if>
		<if test="resultx != null and '' != resultx">
			and a.resultx = #{resultx}
		</if>
		<if test="money != null and '' != money">
			and a.money = #{money}
		</if>
		<if test="addtime != null and '' != addtime">
			and a.addtime = #{addtime}
		</if>
		<if test="memo != null and '' != memo">
			and a.memo = #{memo}
		</if>
	</select>
	<!-- 按条件模糊查询 DAO通过id调用此配置 -->
	<select id="getBrokenByLike" parameterType="broken" resultMap="brokenMap">
		select a.* , b.equipname from broken a , equipment b where a.equipmentid = b.equipmentid
		<if test="equipmentid != null and '' != equipmentid">
			and b.equipname like CONCAT('%', CONCAT(#{equipmentid}, '%'))
		</if>
		<if test="reason != null and '' != reason">
			and a.reason like CONCAT('%', CONCAT(#{reason}, '%'))
		</if>
		<if test="resultx != null and '' != resultx">
			and a.resultx like CONCAT('%', CONCAT(#{resultx}, '%'))
		</if>
		<if test="money != null and '' != money">
			and a.money like CONCAT('%', CONCAT(#{money}, '%'))
		</if>
		<if test="addtime != null and '' != addtime">
			and a.addtime like CONCAT('%', CONCAT(#{addtime}, '%'))
		</if>
		<if test="memo != null and '' != memo">
			and a.memo like CONCAT('%', CONCAT(#{memo}, '%'))
		</if>
	</select>
</mapper>




























<!--  -->
